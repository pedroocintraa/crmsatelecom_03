// Script para testar se o erro do StatusSelector foi resolvido
// Execute no console do navegador

async function testarStatusSelectorCorrigido() {
  try {
    console.log('üîç Testando corre√ß√£o do StatusSelector...');
    
    console.log('\n‚úÖ PROBLEMA IDENTIFICADO E CORRIGIDO:');
    console.log('  ‚ùå Props inconsistentes no StatusSelector');
    console.log('  ‚ùå Interface esperava: venda, onStatusChange');
    console.log('  ‚ùå Estava passando: currentStatus, onStatusChange, userRole');
    console.log('  ‚úÖ CORRIGIDO: Agora passa venda, onStatusChange');
    
    console.log('\nüîß CORRE√á√ÉO APLICADA:');
    console.log('ANTES:');
    console.log('  <StatusSelector');
    console.log('    currentStatus={venda.status}');
    console.log('    onStatusChange={handleStatusChange}');
    console.log('    userRole={usuario.funcao}');
    console.log('  />');
    console.log('');
    console.log('DEPOIS:');
    console.log('  <StatusSelector');
    console.log('    venda={venda}');
    console.log('    onStatusChange={handleStatusChange}');
    console.log('  />');
    
    console.log('\nüöÄ PARA TESTAR:');
    console.log('1. Acesse: http://localhost:8081/acompanhamento');
    console.log('2. Clique em "Ver Detalhes" de uma venda');
    console.log('3. A p√°gina DEVE carregar sem erro do StatusSelector');
    console.log('4. Se for Admin/Supervisor, o StatusSelector deve aparecer');
    
    // Verificar se estamos na p√°gina correta
    if (window.location.pathname.includes('venda')) {
      console.log('\n‚úÖ Voc√™ est√° numa p√°gina de detalhes de venda!');
      
      // Verificar se a p√°gina carregou sem erros
      const body = document.body;
      const hasContent = body.innerText.trim().length > 100;
      
      if (hasContent) {
        console.log('‚úÖ P√°gina carregou com conte√∫do - erro do StatusSelector resolvido!');
        
        // Verificar se encontramos o StatusSelector
        const statusSelector = document.querySelector('[class*="select"], select');
        if (statusSelector) {
          console.log('‚úÖ StatusSelector encontrado na p√°gina');
        } else {
          console.log('‚ö†Ô∏è StatusSelector n√£o encontrado (talvez n√£o tenha permiss√£o)');
        }
        
        // Verificar outros elementos essenciais
        const elementos = {
          titulo: document.querySelector('h1'),
          cards: document.querySelectorAll('[class*="card"], .card'),
          buttons: document.querySelectorAll('button'),
          badges: document.querySelectorAll('[class*="badge"], .badge')
        };
        
        console.log('\nüìä ELEMENTOS ENCONTRADOS:');
        console.log(`  üìÑ T√≠tulo: ${elementos.titulo ? '‚úÖ' : '‚ùå'}`);
        console.log(`  üìã Cards: ${elementos.cards.length} encontrados`);
        console.log(`  üî≤ Bot√µes: ${elementos.buttons.length} encontrados`);
        console.log(`  üè∑Ô∏è Badges: ${elementos.badges.length} encontrados`);
        
        // Verificar se h√° erros no console do React
        const reactErrors = document.querySelectorAll('[data-reactroot] [class*="error"]');
        if (reactErrors.length === 0) {
          console.log('‚úÖ Nenhum erro React detectado visualmente');
        } else {
          console.log(`‚ö†Ô∏è ${reactErrors.length} poss√≠veis erros React encontrados`);
        }
        
      } else {
        console.log('‚ùå P√°gina ainda est√° vazia - pode haver outros erros');
        console.log('‚ö†Ô∏è Verifique o console por mensagens de erro adicionais');
      }
      
    } else if (window.location.pathname.includes('acompanhamento')) {
      console.log('\n‚úÖ Voc√™ est√° na p√°gina de acompanhamento!');
      console.log('üéØ Clique em "Ver Detalhes" de uma venda para testar a corre√ß√£o');
      
    } else {
      console.log('\nüìù Para testar a corre√ß√£o, v√° para:');
      console.log('  - Acompanhamento: http://localhost:8081/acompanhamento');
      console.log('  - Depois clique em "Ver Detalhes" de uma venda');
    }
    
    console.log('\nüéâ CORRE√á√ÉO DO STATUS SELECTOR APLICADA!');
    console.log('üí™ O erro "Cannot read properties of undefined" deve estar resolvido!');
    
    // Aguardar um pouco e verificar se n√£o h√° mais erros
    setTimeout(() => {
      console.log('\nüîç VERIFICA√á√ÉO FINAL (ap√≥s 2 segundos):');
      console.log('  - Se voc√™ v√™ este log, o JavaScript est√° funcionando');
      console.log('  - Se n√£o h√° mais erros no console, a corre√ß√£o funcionou');
      console.log('  - Se a p√°gina carregou completamente, o problema est√° resolvido');
    }, 2000);
    
  } catch (error) {
    console.error('‚ùå Erro no teste:', error);
    console.log('‚ö†Ô∏è Se houve erro aqui, ainda pode haver problemas no c√≥digo');
  }
}

// Executar teste
testarStatusSelectorCorrigido();