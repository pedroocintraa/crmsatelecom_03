/**
 * Script utilit√°rio para criar √≠ndices de CPF retroativos
 * Execute no console do navegador para criar √≠ndices para vendas existentes
 */

export async function executarCriacaoIndices() {
  try {
    console.log('üöÄ Iniciando cria√ß√£o de √≠ndices de CPF...');
    
    const { vendasService } = await import('@/services/vendasService');
    await vendasService.criarIndicesRetroativos();
    
    console.log('‚úÖ Cria√ß√£o de √≠ndices conclu√≠da!');
    
  } catch (error) {
    console.error('‚ùå Erro ao criar √≠ndices:', error);
  }
}

export async function testarValidacaoCpf(cpf: string) {
  try {
    console.log(`üß™ Testando valida√ß√£o para CPF: ${cpf}`);
    
    const { vendasService } = await import('@/services/vendasService');
    const isDuplicado = await vendasService.verificarCpfDuplicado(cpf);
    
    if (isDuplicado) {
      console.log(`‚ùå CPF ${cpf} J√Å EXISTE no sistema`);
    } else {
      console.log(`‚úÖ CPF ${cpf} est√° dispon√≠vel`);
    }
    
    return isDuplicado;
    
  } catch (error) {
    console.error('‚ùå Erro ao testar CPF:', error);
    return false;
  }
}

// Fun√ß√£o para ser executada no console do navegador
(window as any).criarIndicesCpf = executarCriacaoIndices;
(window as any).testarCpf = testarValidacaoCpf;

console.log('üîß Utilit√°rios carregados:');
console.log('  - criarIndicesCpf() - Criar √≠ndices retroativos');
console.log('  - testarCpf("123.456.789-01") - Testar valida√ß√£o de CPF');