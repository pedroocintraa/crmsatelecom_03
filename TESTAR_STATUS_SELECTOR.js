// Script para testar o StatusSelector e controle administrativo
// Execute no console do navegador

async function testarStatusSelector() {
  try {
    console.log('üß™ Testando StatusSelector e controle administrativo...');
    
    // Verificar se estamos na p√°gina correta
    if (!window.location.pathname.includes('venda/')) {
      console.log('‚ùå Execute este script na p√°gina de detalhes de uma venda');
      console.log('üìù V√° para: http://localhost:8080/venda/[ID_DA_VENDA]');
      return;
    }

    console.log('‚úÖ P√°gina correta detectada');
    
    // Verificar se h√° se√ß√£o "A√ß√µes do Backoffice"
    const acoesBackoffice = document.querySelectorAll('[class*="Card"]');
    let encontrouAcoesBackoffice = false;
    
    acoesBackoffice.forEach(card => {
      if (card.textContent && card.textContent.includes('A√ß√µes do Backoffice')) {
        encontrouAcoesBackoffice = true;
        console.log('‚úÖ Se√ß√£o "A√ß√µes do Backoffice" encontrada');
      }
    });
    
    if (!encontrouAcoesBackoffice) {
      console.log('‚ùå Se√ß√£o "A√ß√µes do Backoffice" n√£o encontrada');
      return;
    }
    
    // Verificar se h√° StatusManager
    const statusManager = document.querySelectorAll('[class*="space-y-4"]');
    let encontrouStatusManager = false;
    
    statusManager.forEach(element => {
      if (element.textContent && element.textContent.includes('Status da Venda')) {
        encontrouStatusManager = true;
        console.log('‚úÖ StatusManager encontrado');
      }
    });
    
    if (!encontrouStatusManager) {
      console.log('‚ö†Ô∏è StatusManager n√£o encontrado (pode ser normal)');
    }
    
    // Verificar se h√° StatusSelector (para admins/supervisores)
    const statusSelector = document.querySelectorAll('[class*="Controle Administrativo"]');
    let encontrouStatusSelector = false;
    
    statusSelector.forEach(element => {
      if (element.textContent && element.textContent.includes('Controle Administrativo')) {
        encontrouStatusSelector = true;
        console.log('‚úÖ StatusSelector encontrado (usu√°rio tem permiss√£o)');
      }
    });
    
    if (!encontrouStatusSelector) {
      console.log('üìù StatusSelector n√£o encontrado');
      console.log('üìù Isso pode ser normal se o usu√°rio n√£o for ADMINISTRADOR_GERAL ou SUPERVISOR');
    }
    
    // Verificar se h√° bot√µes de a√ß√£o
    const botoesAcao = document.querySelectorAll('button');
    const botoesStatus = Array.from(botoesAcao).filter(button => 
      button.textContent && (
        button.textContent.includes('Pendente') ||
        button.textContent.includes('Em Atendimento') ||
        button.textContent.includes('Auditada') ||
        button.textContent.includes('Gerada') ||
        button.textContent.includes('Aguardando Habilita√ß√£o') ||
        button.textContent.includes('Habilitada') ||
        button.textContent.includes('Perdida')
      )
    );
    
    console.log(`üìä Bot√µes de status encontrados: ${botoesStatus.length}`);
    
    // Verificar se h√° select de status
    const selects = document.querySelectorAll('select, [role="combobox"]');
    let encontrouSelect = false;
    
    selects.forEach(select => {
      if (select.textContent && select.textContent.includes('Alterar status')) {
        encontrouSelect = true;
        console.log('‚úÖ Select de status encontrado');
      }
    });
    
    if (!encontrouSelect) {
      console.log('üìù Select de status n√£o encontrado');
      console.log('üìù Isso pode ser normal se o usu√°rio n√£o tiver permiss√£o');
    }
    
    console.log('\nüîç Funcionalidades Implementadas:');
    console.log('1. ‚úÖ StatusManager na se√ß√£o "A√ß√µes do Backoffice"');
    console.log('2. ‚úÖ StatusSelector para ADMINISTRADOR_GERAL e SUPERVISOR');
    console.log('3. ‚úÖ Select dropdown para escolher status');
    console.log('4. ‚úÖ Valida√ß√£o de data de instala√ß√£o para status "Auditada"');
    console.log('5. ‚úÖ Valida√ß√£o de motivo para status "Perdida"');
    console.log('6. ‚úÖ Convers√£o de fuso hor√°rio para data de instala√ß√£o');
    console.log('7. ‚úÖ Dialog de confirma√ß√£o para mudan√ßas de status');
    
    console.log('\nüõ†Ô∏è Para testar o StatusSelector:');
    console.log('1. Fa√ßa login como ADMINISTRADOR_GERAL ou SUPERVISOR');
    console.log('2. Acesse uma venda em detalhes');
    console.log('3. Na se√ß√£o "A√ß√µes do Backoffice", procure por "Controle Administrativo"');
    console.log('4. Use o select para escolher um novo status');
    console.log('5. Preencha os campos obrigat√≥rios se necess√°rio');
    console.log('6. Confirme a mudan√ßa no dialog');
    
    console.log('\nüõ†Ô∏è Para testar o StatusManager:');
    console.log('1. Na mesma se√ß√£o, use os bot√µes do StatusManager');
    console.log('2. Teste as transi√ß√µes de status normais');
    console.log('3. Teste marcar como perdida');
    
    console.log('\n‚ö†Ô∏è Verifica√ß√µes Importantes:');
    console.log('- ‚úÖ StatusSelector s√≥ aparece para ADMINISTRADOR_GERAL e SUPERVISOR');
    console.log('- ‚úÖ Select permite escolher qualquer status');
    console.log('- ‚úÖ Data de instala√ß√£o √© obrigat√≥ria para "Auditada"');
    console.log('- ‚úÖ Motivo √© obrigat√≥rio para "Perdida"');
    console.log('- ‚úÖ Dialog de confirma√ß√£o aparece antes da mudan√ßa');
    console.log('- ‚úÖ Fuso hor√°rio de Bras√≠lia √© aplicado na data');
    
    console.log('\nüìã Permiss√µes por Fun√ß√£o:');
    console.log('1. ‚úÖ ADMINISTRADOR_GERAL: Acesso total ao StatusSelector');
    console.log('2. ‚úÖ SUPERVISOR: Acesso total ao StatusSelector');
    console.log('3. ‚úÖ BACKOFFICE: Apenas StatusManager (sem StatusSelector)');
    console.log('4. ‚úÖ SUPERVISOR_EQUIPE: Apenas StatusManager (sem StatusSelector)');
    console.log('5. ‚úÖ VENDEDOR: Apenas StatusManager (sem StatusSelector)');
    
    console.log('\nüîç Pr√≥ximos Passos:');
    console.log('1. Teste o login com diferentes fun√ß√µes');
    console.log('2. Verifique se o StatusSelector aparece corretamente');
    console.log('3. Teste as mudan√ßas de status via select');
    console.log('4. Confirme que as valida√ß√µes funcionam');
    console.log('5. Verifique se a data de instala√ß√£o √© salva corretamente');
    
    // Verificar se h√° StatusSelector vis√≠vel
    if (encontrouStatusSelector) {
      console.log('\n‚úÖ SUCESSO: StatusSelector est√° funcionando!');
      console.log('üìù O usu√°rio tem permiss√£o para usar o controle administrativo');
    } else {
      console.log('\nüìù DICA: Para ver o StatusSelector, fa√ßa login como ADMINISTRADOR_GERAL ou SUPERVISOR');
    }
    
  } catch (error) {
    console.error('‚ùå Erro no teste:', error);
  }
}

// Executar teste
testarStatusSelector(); 