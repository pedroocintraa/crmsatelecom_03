// Script para testar especificamente as transi√ß√µes problem√°ticas
// Execute no console do navegador

async function testarTransicoesProblematicas() {
  try {
    console.log('üß™ Testando transi√ß√µes problem√°ticas (Gerada e Perdida)...');
    
    // Verificar se estamos na p√°gina correta
    if (!window.location.pathname.includes('acompanhamento')) {
      console.log('‚ùå Execute este script na p√°gina "Acompanhamento de Vendas"');
      console.log('üìù V√° para: http://localhost:8080/acompanhamento');
      return;
    }

    console.log('‚úÖ P√°gina correta detectada');
    
    // Verificar se h√° vendas na lista
    const vendasCards = document.querySelectorAll('[class*="card"]');
    console.log(`üìã Vendas encontradas: ${vendasCards.length}`);
    
    if (vendasCards.length === 0) {
      console.log('‚ö†Ô∏è Nenhuma venda encontrada na lista');
      return;
    }
    
    // Verificar status das vendas
    console.log('\nüìä Status das vendas encontradas:');
    const vendasPorStatus = {};
    
    vendasCards.forEach((card, index) => {
      const statusElement = card.querySelector('[class*="badge"]');
      if (statusElement) {
        const status = statusElement.textContent.trim();
        if (!vendasPorStatus[status]) {
          vendasPorStatus[status] = [];
        }
        vendasPorStatus[status].push(index + 1);
        console.log(`üìã Venda ${index + 1}: ${status}`);
      }
    });
    
    console.log('\nüìà Vendas por status:');
    Object.entries(vendasPorStatus).forEach(([status, indices]) => {
      console.log(`  ${status}: ${indices.length} vendas (${indices.join(', ')})`);
    });
    
    // Verificar se h√° vendas auditadas
    if (vendasPorStatus['Auditada'] || vendasPorStatus['auditada']) {
      console.log('\n‚úÖ Vendas auditadas encontradas!');
      console.log('üìù Para testar transi√ß√£o para "Gerada":');
      console.log('1. Clique em "Ver Detalhes" de uma venda auditada');
      console.log('2. Verifique se o bot√£o "Marcar como Gerada" aparece');
      console.log('3. Se n√£o aparecer, verifique o console para erros');
      console.log('4. Se aparecer, clique e preencha as observa√ß√µes');
    } else {
      console.log('\n‚ùå Nenhuma venda auditada encontrada');
      console.log('üìù Para testar "Gerada", primeiro precisa ter vendas em status "Auditada"');
    }
    
    // Verificar se h√° vendas pendentes
    if (vendasPorStatus['Pendente'] || vendasPorStatus['pendente']) {
      console.log('\n‚úÖ Vendas pendentes encontradas!');
      console.log('üìù Para testar transi√ß√£o para "Perdida":');
      console.log('1. Clique em "Ver Detalhes" de uma venda pendente');
      console.log('2. Verifique se o bot√£o "Marcar como Perdida" aparece');
      console.log('3. Se n√£o aparecer, verifique o console para erros');
      console.log('4. Se aparecer, clique e preencha o motivo');
    } else {
      console.log('\n‚ùå Nenhuma venda pendente encontrada');
      console.log('üìù Para testar "Perdida", primeiro precisa ter vendas em status "Pendente"');
    }
    
    // Verificar bot√µes de a√ß√£o
    console.log('\nüîß Verificando bot√µes de a√ß√£o dispon√≠veis:');
    const botoesAcao = document.querySelectorAll('button');
    const botoesStatus = Array.from(botoesAcao).filter(btn => 
      btn.textContent && (
        btn.textContent.includes('Iniciar') ||
        btn.textContent.includes('Auditada') ||
        btn.textContent.includes('Gerada') ||
        btn.textContent.includes('Habilita√ß√£o') ||
        btn.textContent.includes('Habilitada') ||
        btn.textContent.includes('Perdida')
      )
    );
    
    console.log(`üìä Bot√µes de a√ß√£o encontrados: ${botoesStatus.length}`);
    botoesStatus.forEach((btn, index) => {
      console.log(`  ${index + 1}. ${btn.textContent.trim()}`);
    });
    
    // Verificar bot√µes de detalhes
    const botoesDetalhes = Array.from(botoesAcao).filter(btn => 
      btn.textContent && btn.textContent.includes('Ver Detalhes')
    );
    
    console.log(`üìä Bot√µes "Ver Detalhes" encontrados: ${botoesDetalhes.length}`);
    
    console.log('\nüîç Problemas Identificados:');
    console.log('1. ‚ùå Transi√ß√£o para "Gerada" n√£o funcionando');
    console.log('   - Poss√≠vel causa: Valida√ß√£o muito rigorosa');
    console.log('   - Poss√≠vel causa: Permiss√µes incorretas');
    console.log('   - Poss√≠vel causa: Dados extras obrigat√≥rios');
    
    console.log('2. ‚ùå Transi√ß√£o para "Perdida" n√£o funcionando');
    console.log('   - Poss√≠vel causa: Valida√ß√£o muito rigorosa');
    console.log('   - Poss√≠vel causa: Permiss√µes incorretas');
    console.log('   - Poss√≠vel causa: Dados extras obrigat√≥rios');
    
    console.log('\nüõ†Ô∏è Para debugar:');
    console.log('1. Abra o console do navegador (F12)');
    console.log('2. Clique em "Ver Detalhes" de uma venda');
    console.log('3. Verifique os logs de debug no console');
    console.log('4. Procure por erros de valida√ß√£o');
    console.log('5. Verifique se os di√°logos aparecem');
    
    console.log('\n‚ö†Ô∏è Verifica√ß√µes Importantes:');
    console.log('- Quantos documentos est√£o anexados? (m√≠nimo 3 para "Gerada")');
    console.log('- Qual √© a fun√ß√£o do usu√°rio logado?');
    console.log('- Os campos obrigat√≥rios est√£o preenchidos?');
    console.log('- Os di√°logos est√£o aparecendo corretamente?');
    console.log('- H√° erros no console do navegador?');
    
    console.log('\nüìã Pr√≥ximos Passos:');
    console.log('1. Execute este script na p√°gina de acompanhamento');
    console.log('2. Clique em "Ver Detalhes" de uma venda');
    console.log('3. Verifique os logs de debug no console');
    console.log('4. Teste clicar nos bot√µes de a√ß√£o');
    console.log('5. Verifique se os di√°logos aparecem');
    console.log('6. Preencha os dados obrigat√≥rios');
    console.log('7. Confirme as mudan√ßas');
    
  } catch (error) {
    console.error('‚ùå Erro no teste:', error);
  }
}

// Executar teste
testarTransicoesProblematicas(); 